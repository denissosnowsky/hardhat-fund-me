{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheapWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x309ed22b04d69277363df2c059204368f3d367e4ccfff3a74709ca613e4077fc",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1033807",
    "logsBloom": "0x
    "blockHash": "0x0d8a2bccc6780bd09f89ba5c875a1f40f1aeda8a49bad733262bcddaf1322a40",
    "transactionHash": "0x309ed22b04d69277363df2c059204368f3d367e4ccfff3a74709ca613e4077fc",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1033807",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "1ba56e8eec0559780216b1bd7acfcf2d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheapWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Den Sosnovskyi\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"This implements price feeds as our library\"}},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function funds this contract\"}},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/**\\n * @title A contract for crowd funding\\n * @author Den Sosnovskyi\\n * @notice This contract is to demo a sample funding contract\\n * @dev This implements price feeds as our library\\n */\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n\\n    address private immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    /* receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    } */\\n\\n    /**\\n     * @notice This function funds this contract\\n     * @dev This implements price feeds as our library\\n     */\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheapWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n\\n        s_funders = new address[](0);\\n\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(\\n        address funder\\n    ) public view returns (uint256) {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0xed638794547b3e55417653b72f11318ca7903c121d6545fe142c0cc6ce467654\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x376a7bed574c8f0025af1e9f8b0ca6aa521c696eab897b614db6fbb97a4dee97\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620012d3380380620012d3833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c6111546200017f600039600081816101e30152818161048701526106d601526111546000f3fe60806040526004361061007b5760003560e01c8063893d20e81161004e578063893d20e8146100fc5780639e87a5cd14610127578063b60d428814610152578063d7b4750c1461015c5761007b565b80630343fb2514610080578063206ddccd146100bd5780633ccfd60b146100c75780636b69a592146100d1575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610a8c565b610199565b6040516100b49190610ad2565b60405180910390f35b6100c56101e1565b005b6100cf610485565b005b3480156100dd57600080fd5b506100e66106c5565b6040516100f39190610ad2565b60405180910390f35b34801561010857600080fd5b506101116106d2565b60405161011e9190610afc565b60405180910390f35b34801561013357600080fd5b5061013c6106fa565b6040516101499190610b76565b60405180910390f35b61015a610724565b005b34801561016857600080fd5b50610183600480360381019061017e9190610bbd565b61085e565b6040516101909190610afc565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610266576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156102ea57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116102a0575b5050505050905060005b815181101561037457600082828151811061031257610311610bea565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061036c90610c48565b9150506102f4565b50600067ffffffffffffffff8111156103905761038f610c91565b5b6040519080825280602002602001820160405280156103be5781602001602082028036833780820191505090505b50600190805190602001906103d4929190610982565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103fb90610cf1565b60006040518083038185875af1925050503d8060008114610438576040519150601f19603f3d011682016040523d82523d6000602084013e61043d565b606091505b5050905080610481576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047890610d63565b60405180910390fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461050a576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156105b5576000600182815481106105305761052f610bea565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806105ad90610c48565b91505061050d565b50600067ffffffffffffffff8111156105d1576105d0610c91565b5b6040519080825280602002602001820160405280156105ff5781602001602082028036833780820191505090505b5060019080519060200190610615929190610982565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161063c90610cf1565b60006040518083038185875af1925050503d8060008114610679576040519150601f19603f3d011682016040523d82523d6000602084013e61067e565b606091505b50509050806106c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b990610d63565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b1880000610763600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108a690919063ffffffff16565b10156107a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079b90610dcf565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107f29190610def565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60006001828154811061087457610873610bea565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108b2836108e2565b90506000670de0b6b3a764000085836108cb9190610e45565b6108d59190610ece565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561092b57600080fd5b505afa15801561093f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109639190610f8c565b5050509150506402540be4008161097a9190611007565b915050919050565b8280548282559060005260206000209081019282156109fb579160200282015b828111156109fa5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109a2565b5b509050610a089190610a0c565b5090565b5b80821115610a25576000816000905550600101610a0d565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a5982610a2e565b9050919050565b610a6981610a4e565b8114610a7457600080fd5b50565b600081359050610a8681610a60565b92915050565b600060208284031215610aa257610aa1610a29565b5b6000610ab084828501610a77565b91505092915050565b6000819050919050565b610acc81610ab9565b82525050565b6000602082019050610ae76000830184610ac3565b92915050565b610af681610a4e565b82525050565b6000602082019050610b116000830184610aed565b92915050565b6000819050919050565b6000610b3c610b37610b3284610a2e565b610b17565b610a2e565b9050919050565b6000610b4e82610b21565b9050919050565b6000610b6082610b43565b9050919050565b610b7081610b55565b82525050565b6000602082019050610b8b6000830184610b67565b92915050565b610b9a81610ab9565b8114610ba557600080fd5b50565b600081359050610bb781610b91565b92915050565b600060208284031215610bd357610bd2610a29565b5b6000610be184828501610ba8565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c5382610ab9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c8657610c85610c19565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cdb600083610cc0565b9150610ce682610ccb565b600082019050919050565b6000610cfc82610cce565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d4d600b83610d06565b9150610d5882610d17565b602082019050919050565b60006020820190508181036000830152610d7c81610d40565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610db9601b83610d06565b9150610dc482610d83565b602082019050919050565b60006020820190508181036000830152610de881610dac565b9050919050565b6000610dfa82610ab9565b9150610e0583610ab9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e3a57610e39610c19565b5b828201905092915050565b6000610e5082610ab9565b9150610e5b83610ab9565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e9457610e93610c19565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ed982610ab9565b9150610ee483610ab9565b925082610ef457610ef3610e9f565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f1e81610eff565b8114610f2957600080fd5b50565b600081519050610f3b81610f15565b92915050565b6000819050919050565b610f5481610f41565b8114610f5f57600080fd5b50565b600081519050610f7181610f4b565b92915050565b600081519050610f8681610b91565b92915050565b600080600080600060a08688031215610fa857610fa7610a29565b5b6000610fb688828901610f2c565b9550506020610fc788828901610f62565b9450506040610fd888828901610f77565b9350506060610fe988828901610f77565b9250506080610ffa88828901610f2c565b9150509295509295909350565b600061101282610f41565b915061101d83610f41565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561105c5761105b610c19565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561109957611098610c19565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156110d6576110d5610c19565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561111357611112610c19565b5b82820290509291505056fea264697066735822122050b97c5cf3b890016e5c90441ecad34ea71fe110715e08f7f8cf8270299d5b2b64736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c8063893d20e81161004e578063893d20e8146100fc5780639e87a5cd14610127578063b60d428814610152578063d7b4750c1461015c5761007b565b80630343fb2514610080578063206ddccd146100bd5780633ccfd60b146100c75780636b69a592146100d1575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610a8c565b610199565b6040516100b49190610ad2565b60405180910390f35b6100c56101e1565b005b6100cf610485565b005b3480156100dd57600080fd5b506100e66106c5565b6040516100f39190610ad2565b60405180910390f35b34801561010857600080fd5b506101116106d2565b60405161011e9190610afc565b60405180910390f35b34801561013357600080fd5b5061013c6106fa565b6040516101499190610b76565b60405180910390f35b61015a610724565b005b34801561016857600080fd5b50610183600480360381019061017e9190610bbd565b61085e565b6040516101909190610afc565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610266576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156102ea57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116102a0575b5050505050905060005b815181101561037457600082828151811061031257610311610bea565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061036c90610c48565b9150506102f4565b50600067ffffffffffffffff8111156103905761038f610c91565b5b6040519080825280602002602001820160405280156103be5781602001602082028036833780820191505090505b50600190805190602001906103d4929190610982565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103fb90610cf1565b60006040518083038185875af1925050503d8060008114610438576040519150601f19603f3d011682016040523d82523d6000602084013e61043d565b606091505b5050905080610481576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047890610d63565b60405180910390fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461050a576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156105b5576000600182815481106105305761052f610bea565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806105ad90610c48565b91505061050d565b50600067ffffffffffffffff8111156105d1576105d0610c91565b5b6040519080825280602002602001820160405280156105ff5781602001602082028036833780820191505090505b5060019080519060200190610615929190610982565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161063c90610cf1565b60006040518083038185875af1925050503d8060008114610679576040519150601f19603f3d011682016040523d82523d6000602084013e61067e565b606091505b50509050806106c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b990610d63565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b1880000610763600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108a690919063ffffffff16565b10156107a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079b90610dcf565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107f29190610def565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60006001828154811061087457610873610bea565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108b2836108e2565b90506000670de0b6b3a764000085836108cb9190610e45565b6108d59190610ece565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561092b57600080fd5b505afa15801561093f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109639190610f8c565b5050509150506402540be4008161097a9190611007565b915050919050565b8280548282559060005260206000209081019282156109fb579160200282015b828111156109fa5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109a2565b5b509050610a089190610a0c565b5090565b5b80821115610a25576000816000905550600101610a0d565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a5982610a2e565b9050919050565b610a6981610a4e565b8114610a7457600080fd5b50565b600081359050610a8681610a60565b92915050565b600060208284031215610aa257610aa1610a29565b5b6000610ab084828501610a77565b91505092915050565b6000819050919050565b610acc81610ab9565b82525050565b6000602082019050610ae76000830184610ac3565b92915050565b610af681610a4e565b82525050565b6000602082019050610b116000830184610aed565b92915050565b6000819050919050565b6000610b3c610b37610b3284610a2e565b610b17565b610a2e565b9050919050565b6000610b4e82610b21565b9050919050565b6000610b6082610b43565b9050919050565b610b7081610b55565b82525050565b6000602082019050610b8b6000830184610b67565b92915050565b610b9a81610ab9565b8114610ba557600080fd5b50565b600081359050610bb781610b91565b92915050565b600060208284031215610bd357610bd2610a29565b5b6000610be184828501610ba8565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c5382610ab9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c8657610c85610c19565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cdb600083610cc0565b9150610ce682610ccb565b600082019050919050565b6000610cfc82610cce565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d4d600b83610d06565b9150610d5882610d17565b602082019050919050565b60006020820190508181036000830152610d7c81610d40565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610db9601b83610d06565b9150610dc482610d83565b602082019050919050565b60006020820190508181036000830152610de881610dac565b9050919050565b6000610dfa82610ab9565b9150610e0583610ab9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e3a57610e39610c19565b5b828201905092915050565b6000610e5082610ab9565b9150610e5b83610ab9565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e9457610e93610c19565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ed982610ab9565b9150610ee483610ab9565b925082610ef457610ef3610e9f565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f1e81610eff565b8114610f2957600080fd5b50565b600081519050610f3b81610f15565b92915050565b6000819050919050565b610f5481610f41565b8114610f5f57600080fd5b50565b600081519050610f7181610f4b565b92915050565b600081519050610f8681610b91565b92915050565b600080600080600060a08688031215610fa857610fa7610a29565b5b6000610fb688828901610f2c565b9550506020610fc788828901610f62565b9450506040610fd888828901610f77565b9350506060610fe988828901610f77565b9250506080610ffa88828901610f2c565b9150509295509295909350565b600061101282610f41565b915061101d83610f41565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561105c5761105b610c19565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561109957611098610c19565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156110d6576110d5610c19565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561111357611112610c19565b5b82820290509291505056fea264697066735822122050b97c5cf3b890016e5c90441ecad34ea71fe110715e08f7f8cf8270299d5b2b64736f6c63430008080033",
  "devdoc": {
    "author": "Den Sosnovskyi",
    "details": "This implements price feeds as our library",
    "kind": "dev",
    "methods": {
      "fund()": {
        "details": "This implements price feeds as our library"
      }
    },
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "This function funds this contract"
      }
    },
    "notice": "This contract is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 74,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}